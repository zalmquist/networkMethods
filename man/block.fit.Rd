% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/util.R
\name{block.fit}
\alias{block.fit}
\title{Block Fit}
\usage{
block.fit(g, model, measure = c("pearson", "negdist"), diag = FALSE,
  iter = 3000, temp.init = 10, cool = 0.995, hill.climb.refine = TRUE,
  seed = NULL, verbose = TRUE)
}
\arguments{
\item{g}{a network to be analyzed}

\item{model}{a vector or matrix specifying the blockmodel to be fit.  If passed
as a vector, the argument should be given column-wise.  For instance,
two-class blockmodels are fit by passing a vector of the form
c(b11,b21,b12,b22), where bij is the value of the i,j cell in the
blockmodel.  Usually, these values are 1 or 0, although NAs are allowed
(and have the effect of removing the indicated cells from consideration
when evaluating goodness of fit).}

\item{measure}{"pearson" for the standard correlation coefficent (may produce
warnings, which are harmless) or "negdist" for the inverse absolute
distance.}

\item{diag}{should the diagonal be included?}

\item{iter}{number of annealing iterations to employ.}

\item{temp.init}{initial temperature for the annealer.}

\item{cool}{cooling factor for the annealer.}

\item{hill.climb.refine}{should the annealing solution be further refined using}

\item{seed}{an optional vector of initial group memberships.}

\item{verbose}{should the function provide diagnostic output?}

\item{hill-climbing?}{(Can be slow, but guarantees convergence to a local optimum.)
optimum.}
}
\value{
An object of class "blockmodel," with the additional list element block.gof.
  (Note that this object can be printed, etc. using the standard methods
  for this class.)
}
\description{
\code{block.fit} returns an object of class "blockmodel."
}
\examples{
data(kaptail.ins)
  plot(kaptail.ins)
# Let's try fitting some blockmodels.  Here are several variants on C/P:
kb1<-block.fit(kaptail.ins,c(1,1,1,0))   # Core w/in,out ties
kb2<-block.fit(kaptail.ins,c(1,1,0,0))   # Core w/in ties
kb3<-block.fit(kaptail.ins,c(1,0,1,0))   # Core w/out ties
kb4<-block.fit(kaptail.ins,c(1,0,0,0))   # Isolated core
kb5<-block.fit(kaptail.ins,c(1,NA,NA,0)) # Ignore core/periphery interactions

# Examine the output directly
kb1                                       # These are "blockmodel" objects
summary(kb2)
}
\author{
Carter T. Butts, University of California, Irvine
}

